name: "🤖 Daily Repository Analysis Update"

on:
  schedule:
    # Run daily at 6 AM UTC (adjust timezone as needed)
    - cron: '0 6 * * *'
  workflow_dispatch: # Allow manual trigger
  push:
    paths:
      - 'check-forks.ps1'
      - 'verify-analysis.ps1'
      - '.github/workflows/update-repos.yml'

jobs:
  update-repos:
    runs-on: windows-latest
    permissions:
      contents: write
      pull-requests: write
      actions: read

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🔧 Setup GitHub CLI
      run: |
        Write-Host "🔍 Verifying GitHub CLI authentication..."
        gh auth status

        # Show which token type is being used
        Write-Host "� Token configuration check:"
        Write-Host "   - Repository: ${{ github.repository }}"
        Write-Host "   - Actor: ${{ github.actor }}"
        Write-Host "   - Token source: ${{ secrets.PAT_TOKEN && 'PAT_TOKEN (Enhanced)' || 'GITHUB_TOKEN (Limited)' }}"
      shell: pwsh
      env:
        GH_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

    - name: 📊 Run repository analysis
      run: |
        Write-Host "🚀 Starting daily repository analysis..."
        Write-Host "📅 Timestamp: $(Get-Date -Format 'yyyy-MM-dd HH:mm UTC')"

        Write-Host "🔍 Running check-forks.ps1..."
        .\check-forks.ps1

        Write-Host "✅ Running verification script..."
        .\verify-analysis.ps1

        Write-Host "📊 Repository analysis complete!"

        # Show summary of changes
        if (Test-Path "repo-analysis.json") {
          $analysis = Get-Content "repo-analysis.json" | ConvertFrom-Json
          $repoCount = $analysis.repositories.Count
          Write-Host "📈 Total repositories analyzed: $repoCount"
        }
      shell: pwsh
      env:
        GH_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

    - name: 📅 Update timestamp in REPOS.md
      run: |
        Write-Host "🕒 Updating last updated timestamp in REPOS.md..."

        # Get current UTC timestamp
        $utcTime = (Get-Date).ToUniversalTime().ToString("MMMM dd, yyyy \a\t hh:mm tt UTC")
        Write-Host "📅 New timestamp: $utcTime"

        # Update the timestamp in REPOS.md
        if (Test-Path "REPOS.md") {
          $content = Get-Content "REPOS.md" -Raw
          $pattern = '> \*\*Last Updated\*\*: .+?UTC'
          $replacement = "> **Last Updated**: $utcTime"

          if ($content -match $pattern) {
            $newContent = $content -replace $pattern, $replacement
            Set-Content "REPOS.md" -Value $newContent -NoNewline
            Write-Host "✅ Timestamp updated successfully in REPOS.md"
          } else {
            Write-Host "⚠️ Could not find timestamp pattern in REPOS.md"
          }
        } else {
          Write-Host "⚠️ REPOS.md file not found"
        }
      shell: pwsh

    - name: 🔍 Check for changes
      id: git-check
      run: |
        $changes = git status --porcelain
        if ($changes) {
          Write-Host "📝 Changes detected in the following files:"
          git status --short
          echo "changes=true" >> $env:GITHUB_OUTPUT

          # Count changed files
          $changedFiles = (git status --porcelain | Measure-Object).Count
          echo "file_count=$changedFiles" >> $env:GITHUB_OUTPUT
        } else {
          Write-Host "✨ No changes detected - repository data is up to date!"
          echo "changes=false" >> $env:GITHUB_OUTPUT
          echo "file_count=0" >> $env:GITHUB_OUTPUT
        }
      shell: pwsh

    - name: 🚀 Create Pull Request with Alex Finch integration
      if: steps.git-check.outputs.changes == 'true'
      run: |
        # Configure git for automation
        git config --local user.email "alex.finch@github-actions.bot"
        git config --local user.name "Alex Finch (GitHub Actions)"

        # Create timestamped branch
        $timestamp = Get-Date -Format "yyyy-MM-dd-HHmm"
        $branch = "daily-repo-update-$timestamp"
        git checkout -b $branch

        # Stage and commit changes
        git add repo-analysis.json REPOS.md REPO-MANAGEMENT.md README.md
        git commit -m "chore: daily repository analysis update ($timestamp)

        🤖 Automated daily update via Alex Finch cognitive architecture
        📊 Updated repository analysis data with latest project activity
        📝 Refreshed documentation with current statistics and metrics
        🔄 Synchronized portfolio data across all documentation files

        📅 Generated: $(Get-Date -Format 'yyyy-MM-dd HH:mm UTC')
        🎯 Workflow: Daily Repository Analysis Update
        🆔 Run ID: ${{ github.run_id }}
        📁 Files updated: ${{ steps.git-check.outputs.file_count }}"

        # Push the branch
        git push origin $branch

        # Create comprehensive PR description
        $prBody = @"
        ## 🤖 Daily Repository Analysis Update

        Alex Finch has completed the automated daily analysis of your repository portfolio and detected updates that need to be synchronized.

        ### 📊 **Analysis Summary:**
        - **🗓️ Update Date**: $(Get-Date -Format 'yyyy-MM-dd HH:mm UTC')
        - **📁 Files Modified**: ${{ steps.git-check.outputs.file_count }}
        - **🎯 Trigger**: ${{ github.event_name }}
        - **🔄 Frequency**: Daily automated scan

        ### 📝 **Changes Made:**
        - ✅ Updated \`repo-analysis.json\` with latest repository data
        - ✅ Refreshed \`REPOS.md\` with current project statistics
        - ✅ Synchronized \`REPO-MANAGEMENT.md\` with latest metrics
        - ✅ Updated portfolio counts and activity indicators

        ### 🧠 **Cognitive Architecture Integration:**
        This update is part of the Alex Finch cognitive architecture system:
        - **📋 Working Memory**: Fresh repository data for immediate analysis
        - **🧠 Long-term Memory**: Will be updated in \`.github/MEMORY.md\` post-merge
        - **✅ Task Memory**: Portfolio maintenance tasks automatically handled

        ### 🤖 **GitHub Copilot Ready:**
        After merging, you can interact with GitHub Copilot using:
        - \`@github-copilot meditate\` - Trigger full cognitive cadence review
        - \`@github-copilot analyze portfolio trends\` - Deep dive into repository growth
        - \`@github-copilot suggest documentation improvements\` - Enhance descriptions

        ### 🔍 **Quality Assurance:**
        - ✅ Scripts executed successfully (\`check-forks.ps1\`, \`verify-analysis.ps1\`)
        - ✅ Data validation completed
        - ✅ JSON structure verified
        - ✅ Documentation synchronization confirmed

        ### 🚀 **Next Steps:**
        1. **Review** the automated changes for accuracy
        2. **Merge** to apply updates to your portfolio
        3. **Interact** with Alex Finch for further enhancements

        ---
        *🤖 This PR was generated by the Alex Finch cognitive architecture system. The daily automation ensures your portfolio stays current with your active development work.*

        **Workflow Details**: [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
        "@

        # Create the pull request
        try {
          gh pr create `
            --title "🤖 Daily repository analysis update ($(Get-Date -Format 'MMM dd, yyyy'))" `
            --body $prBody `
            --head $branch `
            --base main `
            --label "automation,daily-update,alex-finch"

          Write-Host "✅ Pull request created successfully with Alex Finch integration!"
        } catch {
          Write-Host "⚠️ PR creation failed (likely due to permissions): $($_.Exception.Message)"
          Write-Host "📋 Branch '$branch' was pushed successfully and is ready for manual PR creation"
          Write-Host "🔗 Create PR manually: https://github.com/${{ github.repository }}/pull/new/$branch"
        }

        Write-Host "🎯 Branch: $branch"
        Write-Host "📊 Ready for cognitive architecture analysis!"
      shell: pwsh
      env:
        GH_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

    - name: 🔄 Auto-merge Pull Request (if auto-merge enabled)
      if: steps.git-check.outputs.changes == 'true'
      run: |
        Write-Host "🤖 Attempting auto-merge of daily update..."

        # Wait a moment for PR to be fully created
        Start-Sleep -Seconds 5

        # Find the PR for our branch
        $branch = "daily-repo-update-$(Get-Date -Format 'yyyy-MM-dd-HHmm')"

        try {
          # Get the PR number for our branch
          $prInfo = gh pr list --head $branch --json number,title,url | ConvertFrom-Json

          if ($prInfo -and $prInfo.Count -gt 0) {
            $prNumber = $prInfo[0].number
            $prUrl = $prInfo[0].url

            Write-Host "🔍 Found PR #$prNumber for branch '$branch'"
            Write-Host "🔗 PR URL: $prUrl"

            # Enable auto-merge with squash
            gh pr merge $prNumber --auto --squash --delete-branch

            Write-Host "✅ Auto-merge enabled for PR #$prNumber"
            Write-Host "🎯 PR will automatically merge when checks pass"
            Write-Host "🗑️ Branch will be automatically deleted after merge"
          } else {
            Write-Host "⚠️ No PR found for branch '$branch' - may need manual creation"
            Write-Host "🔗 Create manually: https://github.com/${{ github.repository }}/pull/new/$branch"
          }
        } catch {
          Write-Host "⚠️ Auto-merge setup failed: $($_.Exception.Message)"
          Write-Host "📋 PR may require manual approval/merge"
        }
      shell: pwsh
      env:
        GH_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

    - name: 📈 Log completion status
      run: |
        if ('${{ steps.git-check.outputs.changes }}' -eq 'true') {
          Write-Host "✅ Daily update completed - PR created for review"
        } else {
          Write-Host "✨ Daily update completed - no changes detected"
        }
        Write-Host "🎯 Alex Finch cognitive architecture standing by for next analysis cycle"
      shell: pwsh
